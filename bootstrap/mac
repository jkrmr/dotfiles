#!/usr/bin/env bash

# shellcheck disable=SC1090
# SC1090: Can't follow non-constant source.
#         Use a directive to specify location.

timestamp="$(date +%s)"
export BOOTSTRAP_LOG_PATH="$HOME/Desktop/bootstrap-$timestamp.log"
touch "$BOOTSTRAP_LOG_PATH"

export LOCAL_DOTFILES="$HOME/.dotfiles"
export SYNCED="$HOME/Dropbox/Sync"

getc() {
  IFS= read -r -n1 -d ''
}

step() {
  echo && echo "$1 ..."
}

(
  step "Installing Xcode command line tools"
  loc="$(xcode-select -p 2> /dev/null)"
  if [[ ! "$loc" =~ "CommandLineTools" ]]; then
    xcode-select --install
    getc
  fi

  step "Accepting the Xcode CLI tools license"
  echo sudo xcodebuild -license accept
  sudo xcodebuild -license accept

  step "Cloning dotfiles"
  if [ ! -d "$LOCAL_DOTFILES" ]; then
    git clone --recursive \
      https://github.com/jmromer/dotfiles.git \
      "$LOCAL_DOTFILES" 1> /dev/null
  fi

  step "Cloning emacs config repo"
  if [ ! -d "$HOME/.emacs.d" ]; then
    git clone https://github.com/syl20bnr/spacemacs \
      --branch=develop \
      "${HOME}/.emacs.d"
  fi

  step "Installing or updating Homebrew"
  brew_installed="$(command -v brew >/dev/null)"
  if [[ -z "$brew_installed" ]]; then
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' |\
      ruby
  else
    brew update
  fi

  step "Installing Homebrew formulas"
  source "$HOME/.dotfiles/bootstrap/packages-brew.sh"
  source "$HOME/.dotfiles/bootstrap/packages-brew.mac.sh"

  step "Installing GNU tools"
  source "$HOME/.dotfiles/bootstrap/packages-gnu.sh"

  step "Installing Homebrew Cask"
  brew tap caskroom/cask

  step "Installing GUI apps with Homebrew Cask"
  source "$HOME/.dotfiles/bootstrap/packages-cask.sh"

  step "Setting up LaunchAgents"
  mkdir -p ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/emacs/*.plist ~/Library/LaunchAgents
  ln -sfv "$HOME/.dotfiles/launch_agents/jmromer.cdd-prune-history.plist" ~/Library/LaunchAgents
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.emacs.plist

  step "Setting zsh as the default shell"
  brew_prefix="$(brew --prefix)"
  echo "$brew_prefix/bin/bash" | sudo tee -a /etc/shells
  echo "$brew_prefix/bin/zsh" | sudo tee -a /etc/shells
  chsh -s "$brew_prefix/bin/zsh"

  step "Linking dotfiles into home directory"
  ln -s "$HOME/.dotfiles/rcrc" "$HOME/.rcrc"
  rcup

  mkdir "$HOME/.config"
  ln -s "$SYNCED/config/hub" "$HOME/.config/hub"
  ln -s "$SYNCED/config/git" "$HOME/.config/git"
  ln -s "$SYNCED/karabiner" "$HOME/.config/karabiner"

  step "Setting up Dropbox (press any key when complete)"
  brew cask install dropbox
  open /Applications/Dropbox.app
  getc

  step "Setting up asdf"
  . "$(brew --prefix asdf)/asdf.sh"
  . "$(brew --prefix asdf)/etc/bash_completion.d/asdf.bash"

  step "Setting Ruby compilation vars"
  . "$HOME/.ruby-build-vars"

  step "Installing Ruby"
  ruby_version="$(asdf list-all ruby | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort | tail -1)"
  if ! asdf versions ruby | grep -Fq "$ruby_version"; then
    step "Installing Ruby $ruby_version"
    asdf install ruby "$ruby_version"
    asdf global ruby "$ruby_version"
    gem ctags

    step "Configuring Bundler"
    number_of_cores=$(sysctl -n hw.ncpu)
    bundle config --global jobs "$((number_of_cores - 1))"
  fi

  step "Creating ~/.ssh"
  mkdir "$HOME/.ssh"
  cp "$SYNCED"/ssh/* "$HOME/.ssh"
  chmod 600 "$HOME"/ssh/*

  step "Creating ~/.gnupg"
  gpg --list-keys
  cp -r "$SYNCED"/gnupg/* "$HOME/.gnupg"
  chmod 700 -R ~/.gnupg

  step "Setting Mac OS X defaults"
  source "$LOCAL_DOTFILES/bootstrap/defaults-mac.sh"

  step "Creating terminfo entries"
  for file in "$HOME"/.dotfiles/terminfo/*; do
    echo tic "$file"
    tic "$file"
  done

  step "Downloading installers"
  wget -O ~/Desktop/delivery-status.zip https://junecloud.com/get/delivery-status-widget

  step "Install ASDF"
  zsh "$LOCAL_DOTFILES/bootstrap/packages-asdf.zsh"

  step "Install Vim Packages"
  vim +PlugUpgrade +PlugUpdate +PlugInstall +UpdateRemotePlugins +qall

  step "Setup script is complete"
) | tee "$BOOTSTRAP_LOG_PATH"
