#!/usr/bin/env bash

# shellcheck disable=SC1090
# SC1090: Can't follow non-constant source.
#         Use a directive to specify location.

timestamp="$(date +%s)"
export BOOTSTRAP_LOG_PATH="$HOME/Desktop/bootstrap-$timestamp.log"
touch "$BOOTSTRAP_LOG_PATH"

export LOCAL_DOTFILES="$HOME/.dotfiles"
export SYNCED="$HOME/Dropbox/Sync"

getc() {
  IFS= read -r -n1 -d ''
}

step() {
  echo && echo "$1 ..."
}

(
  step "Installing Xcode command line tools"
  loc="$(xcode-select -p 2> /dev/null)"
  if [[ ! "$loc" =~ "CommandLineTools" ]]; then
    xcode-select --install
    getc
  fi

  step "Accepting the Xcode CLI tools license"
  echo sudo xcodebuild -license accept
  sudo xcodebuild -license accept

  # see
  # https://stackoverflow.com/a/54492339/2845260
  # https://stackoverflow.com/a/52530212/2845260
  step "Installing Mac OS X CLI tool headers (press any key when complete)"
  open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg
  getc
  sudo xcode-select -s /Library/Developer/CommandLineTools

  step "Cloning dotfiles"
  if [ ! -d "$LOCAL_DOTFILES" ]; then
    git clone --recursive \
      https://github.com/jmromer/dotfiles.git \
      "$LOCAL_DOTFILES" 1> /dev/null
  fi

  step "Cloning emacs config repo"
  if [ ! -d "$HOME/.emacs.d" ]; then
    git clone https://github.com/syl20bnr/spacemacs \
      --branch=develop \
      "${HOME}/.emacs.d"
  fi

  step "Installing or updating Homebrew"
  brew_installed="$(command -v brew >/dev/null)"
  if [[ -z "$brew_installed" ]]; then
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' |\
      ruby
  else
    brew update
  fi

  step "Installing Homebrew formulas"
  source "$HOME/.dotfiles/bootstrap/packages-brew.sh"
  source "$HOME/.dotfiles/bootstrap/packages-brew.mac.sh"

  step "Installing GNU tools"
  source "$HOME/.dotfiles/bootstrap/packages-gnu.sh"

  step "Installing Homebrew Cask"
  brew tap caskroom/cask

  step "Installing GUI apps with Homebrew Cask"
  source "$HOME/.dotfiles/bootstrap/packages-cask.sh"

  step "Setting up LaunchAgents"
  echo mkdir -p ~/Library/LaunchAgents
  mkdir -p ~/Library/LaunchAgents

  while read -r plist; do
      echo ln -sfv "${plist}" ~/Library/LaunchAgents/
      ln -sfv "${plist}" ~/Library/LaunchAgents/
  done < <(find "${DOTFILE_PATH}"/launch_agents/* -maxdepth 1 -type f)

  step "Setting zsh as the default shell"
  brew_prefix="$(brew --prefix)"
  echo "$brew_prefix/bin/bash" | sudo tee -a /etc/shells
  echo "$brew_prefix/bin/zsh" | sudo tee -a /etc/shells
  chsh -s "$brew_prefix/bin/zsh"

  step "Linking dotfiles into home directory"
  ln -s "$HOME/.dotfiles/rcrc" "$HOME/.rcrc"
  rcup

  mkdir "$HOME/.config"
  ln -s "$SYNCED/config/hub" "$HOME/.config/hub"
  ln -s "$SYNCED/config/git" "$HOME/.config/git"
  ln -s "$SYNCED/config/tridactyl" "$HOME/.config/tridactyl"
  ln -s "$SYNCED/karabiner" "$HOME/.config/karabiner"
  ln -s "$SYNCED/dotfiles/netrc" "$HOME/.netrc"
  ln -s "$SYNCED/dotfiles/authinfo" "$HOME/.authinfo"
  ln -s "$SYNCED/dotfiiles/aws" "$HOME/.aws"
  ln -s "$SYNCED/dotfiiles/env.secure.sh" "$HOME/.env"
  ln -s "$SYNCED/dotfiiles/gitconfig.local" "$HOME/.gitconfig"
  ln -s "$SYNCED/dotfiiles/gitconfig.secure" "$HOME/.gitconfig"
  ln -s "$SYNCED/dotfiiles/init.local.el" "$HOME/.init"
  ln -s "$SYNCED/dotfiiles/netrc" "$HOME/.netrc"
  ln -s "$SYNCED/dotfiiles/pryrc.local" "$HOME/.pryrc"
  ln -s "$SYNCED/dotfiiles/zshrc.local" "$HOME/.zshrc"

  step "Setting up Dropbox (press any key when complete)"
  brew install --cask dropbox
  open /Applications/Dropbox.app
  getc

  step "Installing system ruby gems"
  for lib in $(cat ~/.default-gems | grep -E --invert-match 'rufo|tmuxinator|rubocop'); do
      gem install --user "$lib"
  done

  step "Creating Home directories"
  mkdir ~/Work ~/Projects

  step "Creating ~/.ssh"
  mkdir "$HOME/.ssh"
  cp "$SYNCED"/ssh/* "$HOME/.ssh"
  chmod 600 "$HOME"/.ssh/*

  step "Creating ~/.gnupg"
  gpg --list-keys
  cp -r "$SYNCED"/gnupg/* "$HOME/.gnupg"
  chmod 700 ~/.gnupg
  chmod 644 -R ~/.gnupg/*

  step "Setting Mac OS X defaults"
  bash "$LOCAL_DOTFILES/bootstrap/defaults-mac.sh"

  step "Creating terminfo entries"
  for file in "$HOME"/.dotfiles/terminfo/*; do
    echo tic "$file"
    tic "$file"
  done

  step "Install ASDF"
  zsh "$LOCAL_DOTFILES/bootstrap/packages-asdf.zsh"

  step "Install Vim Packages"
  vim +PlugUpgrade +PlugUpdate +PlugInstall +UpdateRemotePlugins +qall

  step "Setup script is complete"
) | tee "$BOOTSTRAP_LOG_PATH"
